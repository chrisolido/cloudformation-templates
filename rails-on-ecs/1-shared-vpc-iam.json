{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Networking Environment Configuration"
                    },
                    "Parameters": [
                        "VPCCidr",
                        "PublicSubnetCidr1",
                        "PublicSubnetCidr2",
                        "PrivateSubnetCidr1",
                        "PrivateSubnetCidr2"
                    ]
                }
            ]
        }
    },
    "Parameters": {
        "VPCCidr": {
            "Type": "String",
            "Description": "CIDR to use for the Shared VPC (x.x.x.x/16)",
            "MinLength": 9,
            "MaxLength": 18,
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/16",
            "ConstraintDescription": "Must be a valid CIDR range in the form x.x.x.x/16",
            "Default": "192.168.0.0/16"
        },
        "PublicSubnetCidr1": {
            "Type": "String",
            "Description": "CIDR to use for Private Subnet 1 of Shared Environment (x.x.x.x/24)",
            "MinLength": 9,
            "MaxLength": 18,
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24",
            "ConstraintDescription": "Must be a valid CIDR range in the form x.x.x.x/24",
            "Default": "192.168.0.0/24"
        },
        "PublicSubnetCidr2": {
            "Type": "String",
            "Description": "CIDR to use for Private Subnet 2 of Shared Environment (x.x.x.x/24)",
            "MinLength": 9,
            "MaxLength": 18,
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24",
            "ConstraintDescription": "Must be a valid CIDR range in the form x.x.x.x/24",
            "Default": "192.168.1.0/24"
        },
        "PrivateSubnetCidr1": {
            "Type": "String",
            "Description": "CIDR to use for Private Subnet 1 of Shared Environment (x.x.x.x/24)",
            "MinLength": 9,
            "MaxLength": 18,
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24",
            "ConstraintDescription": "Must be a valid CIDR range in the form x.x.x.x/24",
            "Default": "192.168.2.0/24"
        },
        "PrivateSubnetCidr2": {
            "Type": "String",
            "Description": "CIDR to use for Private Subnet 2 of Shared Environment (x.x.x.x/24)",
            "MinLength": 9,
            "MaxLength": 18,
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24",
            "ConstraintDescription": "Must be a valid CIDR range in the form x.x.x.x/24",
            "Default": "192.168.3.0/24"
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "CidrBlock": {
                    "Ref": "VPCCidr"
                }
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway"
        },
        "GatewayAttach": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "IGW"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "GatewayAttach",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetCidr1"
                },
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PublicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetCidr2"
                },
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "SubnetRouteTableAssociatePublic1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            }
        },
        "SubnetRouteTableAssociatePublic2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetCidr1"
                },
                "MapPublicIpOnLaunch": false,
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "PrivateSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnetCidr2"
                },
                "MapPublicIpOnLaunch": false,
                "VpcId": {
                    "Ref": "VPC"
                }
            }
        },
        "SubnetRouteTableAssociatePrivate1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1"
                }
            }
        },
        "SubnetRouteTableAssociatePrivate2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2"
                }
            }
        },
        "AutoscalingRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "${AWS::StackName}-ECSAutoscalingPolicy"
                        },
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "application-autoscaling:*",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:PutMetricAlarm",
                                        "ecs:DescribeServices",
                                        "ecs:UpdateService"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ECSServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "${AWS::StackName}-ECSPolicy"
                        },
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                        "elasticloadbalancing:DeregisterTargets",
                                        "elasticloadbalancing:Describe*",
                                        "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                        "elasticloadbalancing:RegisterTargets",
                                        "ec2:Describe*",
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "s3:List*",
                                        "s3:Get*"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ClusterInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Sub": "${AWS::StackName}-EC2ECSServicePolicy"
                        },
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:CreateCluster",
                                        "ecs:DeregisterContainerInstance",
                                        "ecs:DiscoverPollEndpoint",
                                        "ecs:Poll",
                                        "ecs:RegisterContainerInstance",
                                        "ecs:StartTelemetrySession",
                                        "ecs:Submit*",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ClusterInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "ClusterInstanceRole"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "VpcId": {
            "Description": "ID of Shared VPC",
            "Value": {
                "Ref": "VPC"
            },
            "Export": {
                "Name": "shared-vpc-id"
            }
        },
        "PublicSubnet1": {
            "Description": "ID of Shared Public Subnet 1",
            "Value": {
                "Ref": "PublicSubnet1"
            },
            "Export": {
                "Name": "shared-vpc-public-subnet1"
            }
        },
        "PublicSubnet2": {
            "Description": "ID of Shared Public Subnet 2",
            "Value": {
                "Ref": "PublicSubnet2"
            },
            "Export": {
                "Name": "shared-vpc-public-subnet2"
            }
        },
        "PrivateSubnet1": {
            "Description": "ID of Shared Private Subnet 1",
            "Value": {
                "Ref": "PrivateSubnet1"
            },
            "Export": {
                "Name": "shared-vpc-private-subnet1"
            }
        },
        "PrivateSubnet2": {
            "Description": "ID of Shared Private Subnet 2",
            "Value": {
                "Ref": "PrivateSubnet2"
            },
            "Export": {
                "Name": "shared-vpc-private-subnet2"
            }
        },
        "AutoScalingRoleArn": {
            "Description": "Arn of IAM role for autoscaling group",
            "Value": {
                "Fn::GetAtt": [
                    "AutoscalingRole",
                    "Arn"
                ]
            },
            "Export": {
                "Name": "autoscaling-role-arn"
            }
        },
        "ECSServiceRole": {
            "Description": "Role for ECS services",
            "Value": {
                "Ref": "ECSServiceRole"
            },
            "Export": {
                "Name": "ecs-service-role"
            }
        },
        "ClusterInstanceProfile": {
            "Description": "EC2 profile for cluster instances",
            "Value": {
                "Ref": "ClusterInstanceProfile"
            },
            "Export": {
                "Name": "cluster-instance-profile"
            }
        }
    }
}