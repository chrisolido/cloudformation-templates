AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Networking Environment Configuration
        Parameters:
          - VPCCidr
          - PublicSubnetCidr1
          - PublicSubnetCidr2
          - PrivateSubnetCidr1
          - PrivateSubnetCidr2
Parameters:
  VPCCidr:
    Type: String
    Description: CIDR to use for the Shared VPC (x.x.x.x/16)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/16"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 192.168.0.0/16
  PublicSubnetCidr1:
    Type: String
    Description: CIDR to use for Private Subnet 1 of Shared Environment (x.x.x.x/24)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 192.168.0.0/24
  PublicSubnetCidr2:
    Type: String
    Description: CIDR to use for Private Subnet 2 of Shared Environment (x.x.x.x/24)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 192.168.1.0/24
  PrivateSubnetCidr1:
    Type: String
    Description: CIDR to use for Private Subnet 1 of Shared Environment (x.x.x.x/24)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 192.168.2.0/24
  PrivateSubnetCidr2:
    Type: String
    Description: CIDR to use for Private Subnet 2 of Shared Environment (x.x.x.x/24)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 192.168.3.0/24
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !Ref VPCCidr
  IGW:
    Type: AWS::EC2::InternetGateway
  GatewayAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref PublicSubnet1
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref PublicSubnet2
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  SubnetRouteTableAssociatePublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  SubnetRouteTableAssociatePublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref PrivateSubnetCidr1
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref PrivateSubnetCidr2
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
  SubnetRouteTableAssociatePrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  SubnetRouteTableAssociatePrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2
Outputs:
  VpcId:
    Description: ID of Shared VPC
    Value: !Ref VPC
    Export:
      Name: shared-vpc-id
  PublicSubnet1:
    Description: ID of Shared Public Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: shared-vpc-public-subnet1
  PublicSubnet2:
    Description: ID of Shared Public Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: shared-vpc-public-subnet2
  PrivateSubnet1:
    Description: ID of Shared Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: shared-vpc-private-subnet1
  PrivateSubnet2:
    Description: ID of Shared Private Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: shared-vpc-private-subnet2

