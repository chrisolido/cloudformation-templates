AWSTemplateFormatVersion: "2010-09-09"
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Networking Environment Configuration
        Parameters:
          - VPCCidr
          - PrivateSubnetCidr1
          - PrivateSubnetCidr2
      - Label:
          default: Database Configuration
        Parameters:
          - DatabaseName
          - DatabaseUser
          - DatabasePassword
          - DatabaseSize
          - SnapshotToRestore
Parameters:
  VPCCidr:
    Type: String
    Description: CIDR to use for the Shared VPC (x.x.x.x/16)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/16"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/16
    Default: 10.20.0.0/16
  PrivateSubnetCidr1:
    Type: String
    Description: CIDR to use for Private Subnet 1 of Shared Environment (x.x.x.x/24)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.20.0.0/24
  PrivateSubnetCidr2:
    Type: String
    Description: CIDR to use for Private Subnet 2 of Shared Environment (x.x.x.x/24)
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/24"
    ConstraintDescription: Must be a valid CIDR range in the form x.x.x.x/24
    Default: 10.20.1.0/24
  DatabaseName:
    Type: String
    Default: wordpress
    MinLength: 1
    MaxLength: 64
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  DatabaseUser:
    Type: String
    Default: admin
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
  DatabasePassword:
    Type: String
    Default: W0rdpr355
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9~!#$%^&]*"
    NoEcho: true
  DatabaseSize:
    Type: String
    Default: DEV
    AllowedValues:
      - DEV
      - SMALL
      - MEDIUM
      - LARGE
  SnapshotToRestore:
    Description: Restore from existing RDS snapshot (not required)
    Type: String
    Default: ""
Conditions:
  isRestore:
    !Not [!Equals [!Ref SnapshotToRestore, ""]]
  isProduction:
    !Not [!Equals [!Ref DatabaseSize, DEV]]
Mappings:
  RDSInstanceSize:
    DEV:
      DB: db.t2.micro
      Size: "5"
    SMALL:
      DB: db.t2.medium
      Size: "10"
    MEDIUM:
      DB: db.m5.large
      Size: "20"
    LARGE:
      DB: db.m5.2xlarge
      Size: "40"
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
  IGW:
    Type: AWS::EC2::InternetGateway
  GatewayAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref PrivateSubnetCidr1
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref PrivateSubnetCidr2
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttach
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  SharedRDSInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      AllocatedStorage: !FindInMap [RDSInstanceSize, !Ref DatabaseSize, Size]
      StorageType: gp2
      Engine: MariaDB
      DBSubnetGroupName: !Ref RDSSubnetGroup
      DBName: !Ref DatabaseName
      MultiAZ: !If [isProduction, true, false]
      MasterUsername: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabaseUser]
      MasterUserPassword: !If [isRestore, !Ref "AWS::NoValue", !Ref DatabasePassword]
      DBSnapshotIdentifier: !If [isRestore, !Ref SnapshotToRestore, !Ref "AWS::NoValue"]
      DBInstanceClass: !FindInMap [RDSInstanceSize, !Ref DatabaseSize, DB]
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
  RDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Subnet Group
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref VPCCidr
  WPBackupBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 60
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
  WPInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: EC2SyncS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:GetBucketLocation
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub "${WPBackupBucket.Arn}"
                  - !Sub "${WPBackupBucket.Arn}/*"
  WPInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref WPInstanceRole
Outputs:
  VpcId:
    Description: ID of Shared Infrastructure VPC
    Value: !Ref VPC
    Export:
      Name: shared-vpc-id
  VPCCidr:
    Description: IP Range of Shared Infrastructure VPC
    Value: !Ref VPCCidr
    Export: # added to export
      Name: shared-vpc-cidr
  ReservedRange1:
    Description: CIDR Range of Shared Private Subnet 1
    Value: !Ref PrivateSubnetCidr1
    Export:
      Name: shared-vpc-reserved-cidr1
  ReservedRange2:
    Description: CIDR Range of Shared Private Subnet 2
    Value: !Ref PrivateSubnetCidr2
    Export:
      Name: shared-vpc-reserved-cidr2
  PublicRouteTable:
    Description: ID of Public Route Table
    Value: !Ref PublicRouteTable
    Export:
      Name: shared-vpc-public-rt
  DatabaseEndpoint:
    Description: RDS Database Endpoint
    Value: !GetAtt SharedRDSInstance.Endpoint.Address
    Export:
      Name: shared-rds-instance-endpoint
  DatabaseName:
    Description: RDS Database Name
    Value: !Ref DatabaseName
    Export:
      Name: shared-rds-database-name
  DatabaseUser:
    Description: Root User of RDS Instance
    Value: !Ref DatabaseUser
    Export:
      Name: shared-rds-root-user
  DatabasePassword:
    Description: Root user password of RDS Instance
    Value: !Ref DatabasePassword
    Export:
      Name: shared-rds-root-password
  WPBackupBucket:
    Description: Backup S3 Bucket for Wordpress Instances
    Value: !Ref WPBackupBucket
    Export:
      Name: wp-backup-bucket
  WPInstanceProfile:
    Description: Wordpress EC2 Instance Profile
    Value: !Ref WPInstanceProfile
    Export:
      Name: wp-instance-profile
